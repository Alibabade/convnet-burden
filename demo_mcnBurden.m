function demo_mcnBurden()

  opts.includeClassifiers = 1 ;
  opts.includeObjDetectors = 1 ;
  opts.includeSegmenters = 1 ;
  opts.includeKeypointDetectors = 1 ;
  opts.logFile = fullfile(vl_rootnn, 'data/burden/log.txt') ;
  modelDir = fullfile(vl_rootnn, 'data/models-import') ;

  models = {} ;

% TODO

% DONE
%       {'imagenet-matconvnet-alex.mat', [227 227]}, ...
%       {'imagenet-vgg-verydeep-16.mat', [224 224]},...
%       {'imagenet-vgg-verydeep-19.mat', [224 224]},...
%       {'vgg-vd-16-reduced.mat', [224 224]},...
%       {'imagenet-resnet-101-dag.mat', [224 224]},...
%       {'resnext_50_32x4d-pt-mcn.mat', [224 224]},...
%       {'resnext_101_32x4d-pt-mcn.mat', [224 224]},...
%       {'resnext_101_64x4d-pt-mcn.mat', [224 224]},...
%       {'squeezenet1_0-pt-mcn.mat', [224 224]},...
%       {'squeezenet1_1-pt-mcn.mat', [224 224]},...
%       {'imagenet-vgg-f.mat', [224 224]},...
%       {'imagenet-vgg-m.mat', [224 224]},...
%       {'imagenet-vgg-s.mat', [224 224]},...
%       {'imagenet-vgg-m-2048.mat', [224 224]},...
%       {'imagenet-vgg-m-1024.mat', [224 224]},...
%       {'imagenet-vgg-m-128.mat', [224 224]},...
%       {'imagenet-resnet-152-dag.mat', [224 224]},...

  if opts.includeClassifiers
    models = [ models { ...
       {'imagenet-resnet-50-dag.mat', [224 224]},...
       {'imagenet-caffe-ref.mat', [224 224]},...
       {'imagenet-googlenet-dag.mat', [224 224]},...
       {'imagenet-resnet-50-dag.mat', [224 224]},...
       } ] ;
   end

  if opts.includeObjDetectors
    models = [ models { ...
     {'ssd-mcn-pascal-vggvd-300.mat', [300 300]}, ...
     {'ssd-mcn-pascal-vggvd-512.mat', [512 512]}, ...
     {'faster-rcnn-vggvd-pascal', [600 850]}, ...
     {'rfcn-res50-pascal', [600 850]}, ...
     {'rfcn-res101-pascal', [600 850]}, ...
     } ] ;
   end

  if opts.includeSegmenters
    models = [ models { ...
     {'pascal-fcn32s-dag.mat', [384 384]}, ...
     {'pascal-fcn16s-dag.mat', [384 384]}, ...
     {'pascal-fcn8s-dag.mat', [384 384]}, ...
     } ] ;
  end

  if opts.includeKeypointDetectors
    models = [ models { ...
     {'multipose-mpi.mat', [368 368]}, ...
     {'multipose-coco.mat', [368 368]}, ...
     } ] ;
  end

  if ~exist(fileparts(opts.logFile), 'file'), mkdir(fileparts(opts.logFile)) ; end
  diary(opts.logFile) ; diary on ;

  for ii = 1:numel(models)
    modelPath = fullfile(modelDir, models{ii}{1}) ;
    burden('modelPath', modelPath, 'imsz', models{ii}{2}) ;
  end
  diary off ;
